services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: ${DOCKER_USER}/docker-project-backend:latest
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "backend:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - store-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    read_only: true

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: ${DOCKER_USER}/docker-project-frontend:latest
    restart: unless-stopped
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "frontend:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - store-network
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    read_only: true
    volumes:
      - nginx-cache:/var/cache/nginx:rw
      - nginx-pid:/var/run:rw

  gateway:
    image: nginx:alpine
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - store-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "gateway"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ./gateway.conf:/etc/nginx/nginx.conf:ro
      - gateway-cache:/var/cache/nginx:rw
      - gateway-logs:/var/log/nginx:rw

networks:
  store-network:
    driver: bridge

volumes:
  gateway-logs:
  gateway-cache:
  nginx-cache:
  nginx-pid:
