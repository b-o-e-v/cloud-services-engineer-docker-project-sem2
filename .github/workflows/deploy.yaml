name: Docker Project Deploy

on:
  push:
    branches:
      - main

jobs:
  build_and_push_to_docker_hub:
      name: Push Docker image to DockerHub
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker 
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push Backend to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./backend/
            push: true
            tags: ${{ secrets.DOCKER_USER }}/docker-project-backend:latest
        - name: Push Frontend to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./frontend/
            push: true
            tags: ${{ secrets.DOCKER_USER }}/docker-project-frontend:latest

  trivy_scan:
    name: Trivy Scan Docker Images
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Scan Backend image with Trivy
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ${{ secrets.DOCKER_USER }}/docker-project-backend:latest
          vuln-type: 'os,library'
          severity: HIGH,CRITICAL
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
      - name: Scan Frontend image with Trivy
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ${{ secrets.DOCKER_USER }}/docker-project-frontend:latest
          vuln-type: 'os,library'
          severity: HIGH,CRITICAL
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true

  run_with_docker_compose:
    name: Run with docker compose
    runs-on: ubuntu-latest
    needs: trivy_scan
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build via Docker Compose
        uses: hoverkraft-tech/compose-action@v2.2.0
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}

  deploy_to_server:
    name: Deploy Application to Server
    runs-on: ubuntu-latest
    needs: run_with_docker_compose
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Upload docker-compose.yml to server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./docker-compose.yml,./gateway.conf"
          target: "/home/${{ secrets.SSH_USER }}/app"
      - name: Run docker-compose on server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/app
            export DOCKER_USER=${{ secrets.DOCKER_USER }}
            docker compose pull
            docker compose up -d
